@model IEnumerable<GameStore.Models.Product>
@using GameStore.Helpers

@{
    ViewBag.Title = "Zarządzaj produktami";
}

<h2>@ViewBag.Title</h2>

<p>
    Current: @ViewBag.CurrentPage
    <br />
    Max:     @ViewBag.MaxPages
    <br />
    Size:    @ViewBag.PageSize
</p>

<p>
    Current: @Session["Product_Current_Page"]
    <br />
    Size:    @Session["Product_Page_Size"]
</p>

<p>
    @Html.ActionLink("Dodaj nowy produkt", "Create", "Product") | 
    @Html.ActionLink("Zatwierdź wszystkie", "ConfirmAll", "Product")
</p>

@if (ViewBag.MaxPages > 0)
{
    for (int i = 1; i <= ViewBag.MaxPages; ++i)
    {
        @Html.ActionLink(i.ToString(), "Index", new { pageNumber = i })

        if (i != ViewBag.MaxPages)
        {
            @Html.Encode(" | ")
        }
    }

    <table class="table">
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Platform.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Studio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td></td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Platform.Name)
            </td>
            <td>
                @item.State.GetDisplayName()
            </td>
            <td>
                @string.Format("{0:N2}zł", item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Studio)
            </td>
            <td>
                @if (item.ReleaseDate.HasValue)
                {
                    @item.ReleaseDate.Value.ToString("dd.MM.yyyy")
                }
                else
                {
                    @Html.Encode("nieznana")
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", "Product", new { id = item.Id }, new { @class = "icon-link icon-link-details" })
                @if (item.State != GameStore.Models.ProductState.Deleted)
                {
                    @Html.ActionLink("Edit", "Edit", "Product", new { id = item.Id }, new { @class = "icon-link icon-link-edit" })
                    @Html.ActionLink("Delete", "Delete", "Product", new { id = item.Id }, new { @class = "icon-link icon-link-delete" })
                }                
            </td>
        </tr>
    }

    </table>
}
else
{
    <p>Nie dodano jeszcze żadnych produktów.</p>
}